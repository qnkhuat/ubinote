{:paths ["src" "resources"]

 :deps
 {
  org.clojure/clojure                       {:mvn/version "1.11.0"}
  ;; util
  metosin/malli                             {:mvn/version "0.10.1"}   ; schema
  cheshire/cheshire                         {:mvn/version "5.10.2"}   ; fast JSON encoding (used by Ring JSON middleware)
  potemkin/potemkin                         {:mvn/version "0.4.5"}    ; utility macros & fns
  org.mindrot/jbcrypt                       {:mvn/version "0.4"}      ; Crypto library
  org.clojure/core.memoize                  {:mvn/version "1.0.257"}  ; Memoize functions
  clojure.java-time/clojure.java-time       {:mvn/version "1.2.0"}    ; time utils
  dev.weavejester/medley                    {:mvn/version "1.7.0"}    ; utils function to deal with map, arrays

  ;; webserver+routing
  compojure/compojure                       {:mvn/version "1.6.2"}
  ring/ring-core                            {:mvn/version "1.9.4"}
  ring/ring-jetty-adapter                   {:mvn/version "1.9.5"}
  ring/ring-json                            {:mvn/version "0.5.1"}

  ;; log
  org.clojure/tools.logging                 {:mvn/version "1.2.4"}    ; logging lib
  org.apache.logging.log4j/log4j-1.2-api    {:mvn/version "2.18.0"}   ; apache logging framework
  org.apache.logging.log4j/log4j-api        {:mvn/version "2.18.0"}   ; add compatibility with log4j 1.2
  org.apache.logging.log4j/log4j-core       {:mvn/version "2.18.0"}   ; apache logging framework
  org.apache.logging.log4j/log4j-jcl        {:mvn/version "2.18.0"}   ; allows the commons-logging API to work with log4j 2
  org.apache.logging.log4j/log4j-jul        {:mvn/version "2.18.0"}   ; java.util.logging (JUL) -> Log4j2 adapter
  org.apache.logging.log4j/log4j-slf4j-impl {:mvn/version "2.18.0"}   ; allows the slf4j API to work with log4j 2

  ;; database
  org.clojure/java.jdbc                     {:mvn/version "0.7.12"}
  com.h2database/h2                         {:mvn/version "2.1.210"}  ; H2 driver
  org.postgresql/postgresql                 {:mvn/version "42.2.13"}  ; Postgres driver
  org.xerial/sqlite-jdbc                    {:mvn/version "3.45.2.0"} ; sqlite jdbc driver
  com.mchange/c3p0                          {:mvn/version "0.9.5.5"}
  io.github.camsaul/toucan2                 {:mvn/version "1.0.537"}

  ;; hickory/hickory                           {:mvn/version "0.7.1"} ; seems like a fater parser than enlive, but using enlive for now bc it has DOM selector
  hiccup/hiccup                             {:mvn/version "2.0.0-RC2"}; html rendering
  enlive/enlive                             {:mvn/version "1.1.6"}}   ; html parser

 :aliases
 {; clj -M:dev
  :dev
  {:extra-paths ["dev/src" "test/"]
   :extra-deps  {cider/cider-nrepl   {:mvn/version "0.27.1"}
                 hashp/hashp         {:mvn/version "0.2.1"}}
   :jvm-opts  ["-Dun.run.mode=dev"
               "-XX:-OmitStackTraceInFastThrow"]
   :main-opts ["-e" "(use '[hashp.core])"
               "-m" "nrepl.cmdline"
               "--middleware" "[cider.nrepl/cider-middleware]"
               "-i"]}

  ; clj -M:run
  :run
  {:main-opts ["-m" "ubinote"]}

  ; clj -X:h2-shell
  :h2-shell
  {:extra-paths ["dev/src"]
   :exec-fn     dev.h2-shell/shell
   :java-opts   ["-Dfile.encoding=UTF-8"]}

  ; clj -T:build uberjar
  :build
  {:deps       {io.github.clojure/tools.build {:git/tag "v0.9.2" :git/sha "fe6b140"}}
   :ns-default build}}}
